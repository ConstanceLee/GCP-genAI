---
#################################
#################################
## Super Linter GitHub Actions ##
#################################
#################################
name: Lint Code Base

#
# Documentation:
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  push:
    branches-ignore: [main]
    # Remove the line above to run when pushing to main
  pull_request:
    branches: [main]

###############
# Set the Job #
###############
jobs:
  format:
    name: Format Code
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10

      # Step 3: Install Nox
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox

      # Step 4: Run the Nox session
      - name: Run Nox
        run: |
          nox -s format

      # Step 5: Check for changes
      - name: Check for changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff --staged --quiet || git commit -m "Format Code"

      # Step 6: Push changes back to the repository
      - name: Push changes
        if: success() && steps.[step-name].outputs.CHANGES_PRESENT == "true"
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Lint Code Base
    runs-on: ubuntu-latest
    needs: format

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: super-linter/super-linter/slim@v7
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: 'gemini/sample-apps/finance-advisor-spanner/.*\.sql'
          JAVASCRIPT_DEFAULT_STYLE: prettier
          LOG_LEVEL: WARN
          SHELLCHECK_OPTS: -e SC1091 -e 2086
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_PYTHON_PYINK: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_TYPESCRIPT_STANDARD: false # super-linter/super-linter#4445
          VALIDATE_CHECKOV: false
          VALIDATE_JAVASCRIPT_STANDARD: false
